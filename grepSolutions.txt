{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. grep -ni '\\<z' cities.txt \
	Comments:\
2. grep -n 'gan$' cities.txt\
	Comments: The "$" at the end tells the computer that are looking for words that end in the string "gan." \
3. grep '^[A,D,E]' cities.txt\
	Comments:A carrot ^ is used The letters in braces are values the computer searches to match. \
4. grep <.ar cities.txt\
	Comments:The "." is almost like a wildcard in the sense it represents any characters that might come before the String "as" that we pass in.\
5. grep -v 'c' cities.txt\
	Comments:The flag -v returns results that are not equal to the char/String we pass in.\
6. egrep -i [a-z|-]\{14,\} cities.txt\
	Comments: The query uses egrep to pull all the values of cities.txt that have a letter between A and Z, and then filter the result to those which have at least 14 characters. The -i flag is added to ensure results are all-encompassing, and the vertical bar "|" is added to increase readbility.\
7. grep -n ^B cities.txt |wc -o \
	Comment: Take all the words that start with B, pipe the results to get the number of lines.\
8. grep ".dd" cities.txt | wc -l\
	Comment: This doesn't return all 88 of the results intended. The results consist of all the occurrances \
9.\
	Comment:\
10.\
	Comment:}
